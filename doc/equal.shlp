#NAME $EQUAL
#QUICK_DESCRIPTION equality test operator
#CALLING <expr1> $COMMAND <expr2>
#TYPE ($ANY_TYPE, $ANY_TYPE) -> $BOOLEAN_TYPE
#LIBRARYNAME sollya_obj_t sollya_lib_cmp_equal(sollya_obj_t, sollya_obj_t)

#PARAMETERS <expr1> and <expr2> represent expressions


#DESCRIPTION 
The operator $COMMAND evaluates to true iff its operands <expr1> and
<expr2> are syntactically equal and different from $ERROR or constant
expressions that are not constants and that evaluate to the same
floating-point number with the global precision $PREC. The user should
be aware of the fact that because of floating-point evaluation, the
operator $COMMAND is not exactly the same as the mathematical
equality. Further remark that according to IEEE 754-2008 floating-point
rules, which $SOLLYA emulates, floating-point data which are NaN do not
compare equal to any other floating-point datum, including NaN. 


#EXAMPLE
"Hello" == "Hello";
"Hello" == "Salut";
"Hello" == 5;
5 + x == 5 + x;

#EXAMPLE
1 == exp(0);
asin(1) * 2 == pi;
exp(5) == log(4);

#EXAMPLE
sin(pi/6) == 1/4;

#EXAMPLE
prec = 12;
verbosity = 1!;
16384.1 == 16385.1;

#EXAMPLE
error == error;

#EXAMPLE
a = "Biba";
b = NaN;
a == a;
b == b;

#SEEALSO $NEQ
#SEEALSO $GT
#SEEALSO $GE
#SEEALSO $LE
#SEEALSO $LT
#SEEALSO $IN
#SEEALSO $NOT
#SEEALSO $AND
#SEEALSO $OR
#SEEALSO $ERROR
#SEEALSO $PREC
