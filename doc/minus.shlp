#NAME $MINUS
#QUICK_DESCRIPTION subtraction function
#CALLING <function1> $COMMAND <function2>
#TYPE ($FUNCTION_TYPE, $FUNCTION_TYPE) -> $FUNCTION_TYPE
#CALLING <interval1> $COMMAND <interval2>
#TYPE ($RANGE_TYPE, $RANGE_TYPE) -> $RANGE_TYPE
#CALLING <interval1> $COMMAND <constant>
#TYPE ($RANGE_TYPE, $CONSTANT_TYPE) -> $RANGE_TYPE
#CALLING <interval1> $COMMAND <constant>
#TYPE ($CONSTANT_TYPE, $RANGE_TYPE) -> $RANGE_TYPE
#CALLING $COMMAND <function1>
#TYPE $FUNCTION_TYPE -> $FUNCTION_TYPE
#CALLING $COMMAND <interval1>
#TYPE $RANGE_TYPE -> $RANGE_TYPE
#LIBRARYNAME sollya_obj_t sollya_lib_sub(sollya_obj_t, sollya_obj_t)
#LIBRARYNAME sollya_obj_t sollya_lib_build_function_sub(sollya_obj_t, sollya_obj_t)
#LIBRARYNAME #define SOLLYA_SUB(x,y) sollya_lib_build_function_sub((x), (y))
#LIBRARYNAME sollya_obj_t sollya_lib_neg(sollya_obj_t)
#LIBRARYNAME sollya_obj_t sollya_lib_build_function_neg(sollya_obj_t)
#LIBRARYNAME #define SOLLYA_NEG(x) sollya_lib_build_function_neg(x)

#PARAMETERS <function1> and <function2> represent functions
#PARAMETERS <interval1> and <interval2> represent intervals (ranges)
#PARAMETERS <constant> represents a constant or constant expression

#DESCRIPTION 
$COMMAND represents the subtraction (function) on reals. 
The expression <function1> $COMMAND <function2> stands for
the function composed of the subtraction function and the two
functions <function1> and <function2>, where <function1> is 
the subtrahend and <function2> the subtractor.

#DESCRIPTION
$COMMAND can be used for interval arithmetic on intervals
(ranges). $COMMAND will evaluate to an interval that safely
encompasses all images of the subtraction function with arguments varying
in the given intervals.  Any combination of intervals with intervals
or constants (resp. constant expressions) is supported. However, it is
not possible to represent families of functions using an interval as
one argument and a function (varying in the free variable) as the
other one.

#DESCRIPTION
$COMMAND stands also for the negation function.

#EXAMPLE
5 - 2;

#EXAMPLE
x - 2;

#EXAMPLE
x - x;

#EXAMPLE
diff(sin(x) - exp(x));

#EXAMPLE
[1;2] - [3;4];
[1;2] - 17;
13 - [-4;17];

#EXAMPLE
-exp(x);
-13;
-[13;17];

#SEEALSO $PLUS
#SEEALSO $MULT
#SEEALSO $DIVIDE
#SEEALSO $POWER

