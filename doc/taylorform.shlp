#NAME $TAYLORFORM
#QUICK_DESCRIPTION computes a rigorous polynomial approximation (polynomial, interval error bound) for a function, based on Taylor expansions
#CALLING $COMMAND(<f>, <n>, <x0> <x>, <errorType>)
#TYPE ($FUNCTION_TYPE, $INTEGER_TYPE, $RANGE_TYPE, $RANGE_TYPE, $CONSTANT_TYPE) -> $LIST_TYPE

#CALLING $COMMAND(<f>, <n>, <x0> <x>, <errorType>)
#TYPE ($FUNCTION_TYPE, $INTEGER_TYPE, $CONSTANT_TYPE, $RANGE_TYPE, $CONSTANT_TYPE) -> $LIST_TYPE


#PARAMETERS <f> is the function to be approximated
#PARAMETERS <n> is the order of the Taylor form, meaning §§<n>-1§$<n>-1$§§ is the degree of the polynomial that must approximate <f>
#PARAMETERS <x0> is the point (it can be a real number or an interval) where the Taylor exansion of the function is to be considered
#PARAMETERS <x> is the interval over which the function is to be approximated
#PARAMETERS <errorType> is the type of error to be considered. Possible values are $ABSOLUTE or $RELATIVE.

#DESCRIPTION 
$COMMAND computes an approximation polynomial and an interval error bound for function §§f§$f$§§. More precisely, it 
returns a list §§L=[p,coeffErrors, Delta]§$L = \left[ p,coeffErrors, \Delta \right]$§§ where:

§§ § §§

 §§p§$p$§§ is an approximation polynomial of degree §§<n>-1§$<n>-1$§§ which is roughly speaking a numerical Taylor expansion of §§f§$f$§§ at the point <x0>.

§§ § §§

 §§coeffsErrors§$coeffErrors$§§ is a list of §§<n>§$<n>$§§ intervals. Each interval §§coeffsErrors[i]§$coeffErrors\left[ i \right]$§§ contains an enclosure of all the errors accumulated when computing the coefficients of §§p§$p$§§ with interval arithmetic.

§§ § §§

§§Delta§$\Delta$§§ is an interval that provides a bound for the approximation error. Its significance depends on the <errorType> considered.

#DESCRIPTION 
Let us consider §§m_i=p_i +coeffsErrors[i]§$m_i=p_i +coeffsErrors\left[ i \right]$§§, where §§p_i§$p_i$§§ is the §§i§$i$§§th coefficient of §§p§$p$§§.
Then we have the following enclosure in interval arithmetic:

§§ § §§

If <errorType> is $ABSOLUTE, §§for all y in <x>,  f(y) in sum{i=0...n-1} {m_i * (y-x_0)^i} + Delta, §$ \forall y \in x, f(y) \in \sum\limits_{i=0}^{n-1} m_i \cdot (y-x_0)^i +\Delta $§§.

§§ § §§

If <errorType> is $RELATIVE, §§ for all y in <x>, f(y) in sum{i=0...n-1} {m_i * (y-x_0)^i} + Delta * (y-x_0)^n§$ \forall y \in x, f(y) \in \sum\limits_{i=0}^{n-1} m_i \cdot (y-x_0)^i +\Delta \cdot (y-x_0)^n$§§.

#DESCRIPTION 
The polynomial §§p§$p$§§ and the bound  §§Delta§$\Delta$§§ is obtained using Taylor Models and Automatic Differentiation principles and arithmetic. 

#DESCRIPTION 
Note: The relative case is especially useful when functions with removable singularities are considered. In such a case, this routine is able to compute a finite remainder bound, provided that the expansion point given is the problematic removable singularity point.

#DESCRIPTION 
Note: the algorithm does not guarantee that by increasing the degree of the approximation, the remainder bound will become smaller. Moreover, it may 
even become larger due to the dependecy phenomenon present with interval arithmetic. In order to reduce this phenomenon, a possible solution is to split the definition domain <x> into several smaller intervals. 


#EXAMPLE
TL=taylorform(exp(x), 10, 0, [-1,1], absolute);
p=TL[0];
Delta=TL[2];
errors=TL[1];
p; Delta;

#EXAMPLE
TL=taylorform(sin(x)/x, 10, 0, [-1,1], relative);
p=TL[0];
Delta=TL[2];
errors=TL[1];
p; Delta;

