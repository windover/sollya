#NAME $CHECKINFNORM
#QUICK_DESCRIPTION checks whether the infinite norm of a function is bounded by a value
#CALLING $COMMAND(<function>,<range>,<constant>)
#TYPE ($FUNCTION_TYPE, $RANGE_TYPE, $CONSTANT_TYPE) -> $BOOLEAN_TYPE
#PARAMETERS <function> represents the function whose infinite norm is to be checked
#PARAMETERS <range> represents the infinite norm is to be considered on
#PARAMETERS <constant> represents the upper bound the infinite norm is to be checked to

#DESCRIPTION 
The command $COMMAND checks whether the infinite norm of the given
function <function> in the range <range> can be proven (by $SOLLYA) to
be less than the given bound <bound>. This means, if $COMMAND
evaluates to $TRUE, the infinite norm has been proven (by $SOLLYA's
interval arithmetic) to be less than the bound. If $COMMAND evaluates
to $FALSE, there are two possibilities: either the bound is less than
or equal to the infinite norm of the function or the bound is greater
than the infinite norm but $SOLLYA could not conclude using its
internal interval arithmetic.
§§ §§§
$COMMAND is sensitive to the global variable $DIAM. The smaller $DIAM,
the more time $SOLLYA will spend on the evaluation of $COMMAND in
order to prove the bound before returning $FALSE although the infinite
is bounded by the bound. If $DIAM is equal to §§0§$0$§§, $SOLLYA will
eventually spend infinite time on instances where the given bound
<bound> is less or equal to the infinite norm of the function
<function> in range <range>. In contrast, with $DIAM being zero,
$COMMAND evaluates to $TRUE iff the infinite norm of the function in
the range is bounded by the given bound.


#EXAMPLE 
checkinfnorm(sin(x),[0;1.75], 1);
checkinfnorm(sin(x),[0;1.75], 1/2); checkinfnorm(sin(x),[0;20/39],
1/2);

#EXAMPLE
p = remez(exp(x), 5, [-1;1]);
b = dirtyinfnorm(p - exp(x), [-1;1]);
checkinfnorm(p - exp(x), [-1;1], b);
b1 = round(b, 20, RU);
checkinfnorm(p - exp(x), [-1;1], b1);
b2 = round(b, 25, RU);
checkinfnorm(p - exp(x), [-1;1], b2);
diam = 1b-20!;
checkinfnorm(p - exp(x), [-1;1], b2);

#SEEALSO $INFNORM
#SEEALSO $DIRTYINFNORM
#SEEALSO $ACCURATEINFNORM
#SEEALSO $REMEZ
#SEEALSO $DIAM


