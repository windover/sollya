/*********************************************************************************/
restart; 
midpointmode = on!;
[-10971362213211443216165490671142190371208827223443b-165;-43885448852845772864661962684568761484835308893771b-167];
[43885448852845772864661962684568761484835308893771b-167;10971362213211443216165490671142190371208827223443b-165];
[0;0];
[1.25;1.25];
prec = 300!;
d = [1 + 1b-200; 1 + 1b-200];
prec = 50!;
d;
midpointmode = off!;
0~0/0~;
1~0/0~e2;

/*********************************************************************************/
restart; 
p = remez(exp(x), 5, [-1;1]);
accurateinfnorm(p - exp(x), [-1;1], 20);
accurateinfnorm(p - exp(x), [-1;1], 30);
accurateinfnorm(p - exp(x), [-1;1], 40);

/*********************************************************************************/
restart; 
p = remez(exp(x), 5, [-1;1]);
midpointmode = on!;
infnorm(p - exp(x), [-1;1]);
accurateinfnorm(p - exp(x), [-1;1], 40);


/*********************************************************************************/
restart;
true && false;

/*********************************************************************************/
restart;
(1 == exp(0)) && (0 == log(1));

/*********************************************************************************/
restart;
[|2,3,4|]:.5;

/*********************************************************************************/
restart;
[|1,2,3|]:.[|4,5,6|];

/*********************************************************************************/
restart;
[||]:.1;

/*********************************************************************************/
restart;
autosimplify = on !;
print(x - x);
autosimplify = off ;
print(x - x);

/*********************************************************************************/
restart; 
autosimplify = on !; 
print(rationalapprox(sin(pi/5.9),7));
autosimplify = off !; 
print(rationalapprox(sin(pi/5.9),7));

/*********************************************************************************/
restart; 
autosimplify; 

/*********************************************************************************/
restart;
print(canonical(1 + x * (x + 3 * x^2));
print(canonical((x + 1)^7));

/*********************************************************************************/
restart;
print(canonical(exp((x + 1)^5) - log(asin(((x + 2) + x)^4 * (x + 1)) + x)));

/*********************************************************************************/
restart;
canonical;
(x + 2)^9;
canonical = on;
(x + 2)^9;
canonical;
canonical = off!;
(x + 2)^9;

/*********************************************************************************/
restart; 
checkinfnorm(sin(x),[0;1.75], 1);
checkinfnorm(sin(x),[0;1.75], 1/2); checkinfnorm(sin(x),[0;20/39],
1/2);

/*********************************************************************************/
restart;
p = remez(exp(x), 5, [-1;1]);
b = dirtyinfnorm(p - exp(x), [-1;1]);
checkinfnorm(p - exp(x), [-1;1], b);
b1 = round(b, 20, RU);
checkinfnorm(p - exp(x), [-1;1], b1);
b2 = round(b, 25, RU);
checkinfnorm(p - exp(x), [-1;1], b2);
diam = 1b-20!;
checkinfnorm(p - exp(x), [-1;1], b2);

/*********************************************************************************/
restart;
coeff((1+x)^5,3);

/*********************************************************************************/
restart;
coeff(sin(x),0);


/*********************************************************************************/
restart;
[|1,...,3|]@[|7,8,9|];

/*********************************************************************************/
restart;
"Hello "@"World!";


/*********************************************************************************/
restart;
p = remez(exp(x),5,[0;1],default,1e-5);
q = remez(exp(x),5,[0;1],1,1e-5);
p==q;

/*********************************************************************************/
restart;
prec;
prec=200;
/*********************************************************************************/
restart;
degree((1+x)*(2+5*x^2));
degree(0);

/*********************************************************************************/
restart;
degree(sin(x));


/*********************************************************************************/
restart;
denominator(5/3);

/*********************************************************************************/
restart;
denominator(exp(x));

/*********************************************************************************/
restart;
a = 5/3;
b = numerator(a)/denominator(a);
print(a);
print(b);

/*********************************************************************************/
restart;
a = exp(x/3);
b = numerator(a)/denominator(a);
print(a);
print(b);

/*********************************************************************************/
restart;
diff(sin(x));

/*********************************************************************************/
restart;
diff(x);

/*********************************************************************************/
restart;
diff(x^x);

/*********************************************************************************/
restart;
dirtyfindzeros(sin(x),[-5;5]);

/*********************************************************************************/
restart;
L1=dirtyfindzeros(x^2*sin(1/x),[0;1]);
points=1000!;
L2=dirtyfindzeros(x^2*sin(1/x),[0;1]);
length(L1); length(L2);

/*********************************************************************************/
restart;
dirtyinfnorm(sin(x),[-10;10]);

/*********************************************************************************/
restart;
prec=15!;
dirtyinfnorm(exp(cos(x))*sin(x),[0;5]);
prec=40!;
dirtyinfnorm(exp(cos(x))*sin(x),[0;5]);
prec=100!;
dirtyinfnorm(exp(cos(x))*sin(x),[0;5]);
prec=200!;
dirtyinfnorm(exp(cos(x))*sin(x),[0;5]);

/*********************************************************************************/
restart;
dirtyinfnorm(x^2, [log(0);log(1)]);

/*********************************************************************************/
restart;
sin(10);
dirtyintegral(cos(x),[0;10]);
points=2000!;
dirtyintegral(cos(x),[0;10]);

/*********************************************************************************/
restart;
display = decimal;
a = evaluate(sin(pi * x), 0.25);
a;
display = binary;
a;
display = hexadecimal;
a;
display = dyadic;
a;
display = powers;
a;

/*********************************************************************************/
restart;
5 / 2;

/*********************************************************************************/
restart;
x / 2;

/*********************************************************************************/
restart;
x / x;

/*********************************************************************************/
restart;
3 / 0;

/*********************************************************************************/
restart;
diff(sin(x) / exp(x));

/*********************************************************************************/
restart;
verbosity=1!;
a = 1+ 2^(-100);
DD(a);
prec=50!;
DD(a);

/*********************************************************************************/
restart;
display=binary!;
DE(0.1);
round(0.1,64,RN);

/*********************************************************************************/
restart;
D(2^(-2000));
DE(2^(-2000));

/*********************************************************************************/
restart;
verbosity=1!;
f = sin(DE(x));
f(pi);
g = sin(round(x,64,RN));

/*********************************************************************************/
restart;
display=binary!;
D(0.1);
D(4.17);
D(1.011_2 * 2^(-1073));

/*********************************************************************************/
restart;
"Hello" == "Hello";
"Hello" == "Salut";
"Hello" == 5;
5 + x == 5 + x;

/*********************************************************************************/
restart;
1 == exp(0);
asin(1) * 2 == pi;
exp(5) == log(4);

/*********************************************************************************/
restart;
prec = 12;
16384 == 16385;

/*********************************************************************************/
restart;
error == error;

/*********************************************************************************/
restart;
print(5 + "foo");

/*********************************************************************************/
restart;
error;

/*********************************************************************************/
restart;
error == error;
error != error;

/*********************************************************************************/
restart;
correct = 5 + 6;
incorrect = 5 + "foo";
(correct == error || correct != error);
(incorrect == error || incorrect != error);


/*********************************************************************************/
restart;
print(evaluate(sin(pi * x), 2.25));

/*********************************************************************************/
restart;
print(evaluate(sin(pi * x), 2));

/*********************************************************************************/
restart;
print(evaluate(sin(pi * x), [2, 2.25]));

/*********************************************************************************/
restart;
print(evaluate(sin(pi * x), 2 + 0.25 * x));

/*********************************************************************************/
restart;
print(evaluate(sin(pi * 1/x), 0));

/*********************************************************************************/
restart;
print(expand(x^3));

/*********************************************************************************/
restart;
print(expand((x + 2)^3 + 2 * x));

/*********************************************************************************/
restart;
print(expand(exp((x + (x + 3))^5)));

/*********************************************************************************/
restart;
a=round(Pi,20,RN);
e=exponent(a);
e;
m=mantissa(a);
a-m*2^e;

/*********************************************************************************/
restart;
true && false;
2<1;

/*********************************************************************************/
restart;
findzeros(sin(x),[-5;5]);
diam=1e-10!;
findzeros(sin(x),[-5;5]);

/*********************************************************************************/
restart;
autosimplify = off!;
fullparentheses = off;
print(1 + 2 + 3);
fullparentheses = on;
print(1 + 2 + 3);

/*********************************************************************************/
restart;
5 >= 4;
5 >= 5;
5 >= 6;
exp(2) >= exp(1);
log(1) >= exp(2);

/*********************************************************************************/
restart;
prec = 12;
16384 >= 16385;

/*********************************************************************************/
restart;
5 > 4;
5 > 5;
5 > 6;
exp(2) > exp(1);
log(1) > exp(2);

/*********************************************************************************/
restart;
prec = 12;
16384 > 16385;

/*********************************************************************************/
restart;
guessdegree(exp(x),[-1;1],1e-10);


/*********************************************************************************/
restart;
guessdegree(1, [-1;1], 1e-8, 1/exp(x));

/*********************************************************************************/
restart;
head([|1,2,3|]);
head([|1,2...|]);

/*********************************************************************************/
restart;
verbosity = 1!;
q = implementpoly(1 - simplify(TD(1/6)) * x^2,[-1b-10;1b-10],1b-60,DD,"p","implementation.c");
printexpansion(q);
r = implementpoly(1 - simplify(TD(1/6)) * x^2,[-1b-10;1b-10],1b-60,DD,"p","implementation.c",honorcoeffprec);
printexpansion(r);


/*********************************************************************************/
restart;
hopitalrecursions=0;
evaluate(log(1+x)^2/x^2,[-1/2; 1]);
hopitalrecursions=1;
evaluate(log(1+x)^2/x^2,[-1/2; 1]);
/*********************************************************************************/
restart;
print(horner(1 + 2 * x + 3 * x^2));
print(horner((x + 1)^7));

/*********************************************************************************/
restart;
print(horner(exp((x + 1)^5) - log(asin(x + x^3) + x)));

/*********************************************************************************/
restart;
verbosity = 1!;
q = implementpoly(1 - simplify(TD(1/6)) * x^2,[-1b-10;1b-10],1b-60,DD,"p","implementation.c");
printexpansion(q);
r = implementpoly(1 - simplify(TD(1/6)) * x^2,[-1b-10;1b-10],1b-60,DD,"p","implementation.c",honorcoeffprec);
printexpansion(r);

/*********************************************************************************/
restart;
p = 0x3ff0000000000000 + x * (0x3ff0000000000000 + x * (0x3fe0000000000000 + x * (0x3fc5555555555559 + x * (0x3fa55555555555bd + x * (0x3f811111111106e2 + x * (0x3f56c16c16bf5eb7 + x * (0x3f2a01a01a292dcd + x * (0x3efa01a0218a016a + x * (0x3ec71de360331aad + x * (0x3e927e42e3823bf3 + x * (0x3e5ae6b2710c2c9a + x * (0x3e2203730c0a7c1d + x * 0x3de5da557e0781df))))))))))));
q = implementpoly(p,[-1/2;1/2],1b-60,D,"p","implementation.c",honorcoeffprec,"implementation.gappa");
if (q != p) then print("During implementation, rounding has happened.") else print("Polynomial implemented as given.");	

/*********************************************************************************/
restart;
infnorm(exp(x),[-2;3]);

/*********************************************************************************/
restart;
infnorm(exp(x),[-2;3],[| [0;1], [2;2.5] |]);

/*********************************************************************************/
restart;
infnorm(exp(x),[-2;3],"proof.txt", [| [0;1], [2;2.5] |]);

/*********************************************************************************/
restart;
infnorm(exp(x),[1;1]);

/*********************************************************************************/
restart;
infnorm(exp(x), [log(0);log(1)]);


/*********************************************************************************/
restart;
inf([1;3]);
inf(0);

/*********************************************************************************/
restart;
display=binary!;
I=[0.111110000011111_2; 1];
inf(I);
prec=12!;
inf(I);

/*********************************************************************************/
restart;
sin(10);
integral(cos(x),[0;10]);
diam=1e-5!;
integral(cos(x),[0;10]);

/*********************************************************************************/
restart;
isbound(x);
isbound(f);
isbound(g);
f=sin(x);
isbound(x);
isbound(f);
isbound(g);

/*********************************************************************************/
restart;
isbound(a);
{ var a; isbound(a); };
isbound(a);

/*********************************************************************************/
restart;
f=sin(x);
isbound(x);
rename(x,y);
isbound(x);

/*********************************************************************************/
restart;
x=1;
f=sin(y);
rename(y,x);
f;
x;
isbound(x);
rename(x,y);
isbound(x);
x;

/*********************************************************************************/
restart;
isevaluable(sin(pi * 1/x), 0.75);
print(evaluate(sin(pi * 1/x), 0.75));

/*********************************************************************************/
restart;
isevaluable(sin(pi * 1/x), 0.5);
print(evaluate(sin(pi * 1/x), 0.5));


/*********************************************************************************/
restart;
isevaluable(sin(pi * 1/x), 0);
print(evaluate(sin(pi * 1/x), 0));

/*********************************************************************************/
restart;
length("Hello World!");

/*********************************************************************************/
restart;
length([|1,...,5|]);

/*********************************************************************************/
restart;
length([| |]);

/*********************************************************************************/
restart;
length([|1,2...|]);
/*********************************************************************************/
restart;
5 <= 4;
5 <= 5;
5 <= 6;
exp(2) <= exp(1);
log(1) <= exp(2);

/*********************************************************************************/
restart;
prec = 12;
16385 <= 16384;

/*********************************************************************************/
restart;
5 < 4;
5 < 5;
5 < 6;
exp(2) < exp(1);
log(1) < exp(2);

/*********************************************************************************/
restart;
prec = 12;
16384 < 16385;

/*********************************************************************************/
restart;
a=round(Pi,20,RN);
e=exponent(a);
m=mantissa(a);
m;
a-m*2^e;

/*********************************************************************************/
restart;
a = round(Pi,30,RD);
b = round(Pi,30,RU);
d = [a,b];
d;
midpointmode=on!;
d;

/*********************************************************************************/
restart;
mid([1;3]);
mid(17);

/*********************************************************************************/
restart;
5 - 2;

/*********************************************************************************/
restart;
x - 2;

/*********************************************************************************/
restart;
x - x;

/*********************************************************************************/
restart;
diff(sin(x) - exp(x));

/*********************************************************************************/
restart;
5 * 2;

/*********************************************************************************/
restart;
x * 2;

/*********************************************************************************/
restart;
x * x;

/*********************************************************************************/
restart;
diff(sin(x) * exp(x));

/*********************************************************************************/
restart;
"Hello" != "Hello";
"Hello" != "Salut";
"Hello" != 5;
5 + x != 5 + x;

/*********************************************************************************/
restart;
1 != exp(0);
asin(1) * 2 != pi;
exp(5) != log(4);

/*********************************************************************************/
restart;
prec = 12;
16384 != 16385;

/*********************************************************************************/
restart;
error != error;

/*********************************************************************************/
restart;
nop;

/*********************************************************************************/
restart;
succ = proc(n) { return n + 1; };
succ;
succ(5);

/*********************************************************************************/
restart;
! false;

/*********************************************************************************/
restart;
! (1 == exp(0));

/*********************************************************************************/
restart;
numerator(5/3);

/*********************************************************************************/
restart;
numerator(exp(x));

/*********************************************************************************/
restart;
a = 5/3;
b = numerator(a)/denominator(a);
print(a);
print(b);

/*********************************************************************************/
restart;
a = exp(x/3);
b = numerator(a)/denominator(a);
print(a);
print(b);

/*********************************************************************************/
restart;
canonical=on;
p=1+x+x^2;
mode=off;
p;
canonical=mode;
p;

/*********************************************************************************/
restart;
p=1+x+x^2;
mode=on;
p;
canonical=mode;
p;

/*********************************************************************************/
restart;
false || false;

/*********************************************************************************/
restart;
(1 == exp(0)) || (0 == log(1));

/*********************************************************************************/
restart;
parse("exp(x)");

/*********************************************************************************/
restart;
verbosity=1!; prec=12!;
a = 2*pi;
a;
prec=20!;
a;

/*********************************************************************************/
restart;
prec=12!;
d = [pi; 5];
d;
prec=20!;
d;

/*********************************************************************************/
restart;
1 + 2;

/*********************************************************************************/
restart;
x + 2;

/*********************************************************************************/
restart;
x + x;

/*********************************************************************************/
restart;
diff(sin(x) + exp(x));

/*********************************************************************************/
restart;
f=x^2*sin(1/x);
points=10;
dirtyfindzeros(f, [0;1]);
points=100;
dirtyfindzeros(f, [0;1]);


/*********************************************************************************/
restart;
5 ^ 2;

/*********************************************************************************/
restart;
x ^ 2;

/*********************************************************************************/
restart;
3 ^ (-5);

/*********************************************************************************/
restart;
(-3) ^ (-2.5);


/*********************************************************************************/
restart;
diff(sin(x) ^ exp(x));

/*********************************************************************************/
restart;
a=round(Pi,20,RN);
precision(a);
m=mantissa(a);
ceil(log2(m));

/*********************************************************************************/
restart;
display=binary!;
prec=50;
dirtyinfnorm(exp(x),[1;2]);
prec=100;
dirtyinfnorm(exp(x),[1;2]);

/*********************************************************************************/
restart;
1.:[|2,3,4|];

/*********************************************************************************/
restart;
[|1,2,3|].:[|4,5,6|];

/*********************************************************************************/
restart;
1.:[||];

/*********************************************************************************/
restart;
printexpansion(roundcoefficients(taylor(exp(x),5,0),[|DD...|]));

/*********************************************************************************/
restart;
printexpansion(remez(exp(x),5,[-1;1]));

/*********************************************************************************/
restart;
verbosity = 1!;
prec = 3500!;
printexpansion(pi);

/*********************************************************************************/
restart;
printfloat(3);

/*********************************************************************************/
restart;
prec=100!;
verbosity = 1!;
printfloat(exp(5));

/*********************************************************************************/
restart;
printhexa(3);

/*********************************************************************************/
restart;
prec=100!;
verbosity = 1!;
printhexa(exp(5));

/*********************************************************************************/
restart;
print(x + 2 + exp(sin(x))); 
print("Hello","world");
print("Hello","you", 4 + 3, "other persons.");

/*********************************************************************************/
restart;
print("Hello");
print([|"Hello"|]);
s = "Hello";
print(s,[|s|]);
t = "Hello\tyou";
print(t,[|t|]);

/*********************************************************************************/
restart;
display = decimal;
a = evaluate(sin(pi * x), 0.25);
b = evaluate(sin(pi * x), [0.25; 0.25 + 1b-50]);
print(a);
display = binary;
print(a);
display = hexadecimal;
print(a);
display = dyadic;
print(a);
display = powers;
print(a);
display = decimal;
midpointmode = off;
print(b);
midpointmode = on;
print(b);
display = dyadic;
print(b);
display = decimal;
autosimplify = off;
fullparentheses = off;
print(x + x * ((x + 1) + 1));
fullparentheses = on;
print(x + x * ((x + 1) + 1));

/*********************************************************************************/
restart;
printxml(x + 2 + exp(sin(x)));

/*********************************************************************************/
restart;
procedure succ(n) { return n + 1; };
succ(5);
3 + succ(0);
succ;

/*********************************************************************************/
restart;
succ = proc(n) { return n + 1; };
succ(5);
3 + succ(0);
succ;

/*********************************************************************************/
restart;
add = proc(m,n) { var res; res := m + n; return res; };
add(5,6);
add;
verbosity = 1!;
add(3);
add(true,false);


/*********************************************************************************/
restart;
succ = proc(n) { return n + 1; };
succ(5);
succ(x);

/*********************************************************************************/
restart;
hey = proc() { print("Hello world."); };
hey();
print(hey());
hey;


/*********************************************************************************/
restart;
fac = proc(n) { var res; if (n == 0) then res := 1 else res := n * fac(n - 1); return res; };
fac(5);
fac(11);
fac;

/*********************************************************************************/
restart;
myprocs = [| proc(m,n) { return m + n; }, proc(m,n) { return m - n; } |];
(myprocs[0])(5,6);
(myprocs[1])(5,6);
succ = proc(n) { return n + 1; };
pred = proc(n) { return n - 1; };
applier = proc(p,n) { return p(n); };
applier(succ,5);
applier(pred,5);

/*********************************************************************************/
restart;
verbosity = 1!;
myquit = proc(n) { print(n); quit; };
myquit;
myquit(5);

/*********************************************************************************/
restart;
printsucc = proc(n) { var succ; succ = proc(n) { return n + 1; }; print("Successor of",n,"is",succ(n)); };
printsucc(5);

/*********************************************************************************/
restart;
makeadd = proc(n) { var add; print("n =",n); add = proc(m,n) { return n + m; }; return add; };
makeadd(4);
(makeadd(4))(5,6);

/*********************************************************************************/
restart;
quit;

/*********************************************************************************/
restart;
pi10 = rationalapprox(Pi,10);
pi50 = rationalapprox(Pi,50);
pi100 = rationalapprox(Pi,100);
print( pi10, ": ", simplify(floor(-log2(abs(pi10-Pi)/Pi))), "bits." );
print( pi50, ": ", simplify(floor(-log2(abs(pi50-Pi)/Pi))), "bits." );
print( pi100, ": ", simplify(floor(-log2(abs(pi100-Pi)/Pi))), "bits." );

/*********************************************************************************/
restart;
a=0.1;
b=rationalapprox(a,4);
numerator(b); denominator(b);
print(simplify(floor(-log2(abs((b-a)/a)))), "bits.");

/*********************************************************************************/
restart;
display=binary!;
round(Pi,20,RD);





/*********************************************************************************/
restart;
p = remez(exp(x),5,[0;1]);
degree(p);
dirtyinfnorm(p-exp(x),[0;1]);

/*********************************************************************************/
restart;
p = remez(1,[|0,2,4,6,8|],[0,Pi/4],1/cos(x));
canonical=on!;
p;

/*********************************************************************************/
restart;
p1 = remez(exp(x),5,[0;1],default,1e-5);
p2 = remez(exp(x),5,[0;1],default,1e-10);
p3 = remez(exp(x),5,[0;1],default,1e-15);
dirtyinfnorm(p1-exp(x),[0;1]);
dirtyinfnorm(p2-exp(x),[0;1]);
dirtyinfnorm(p3-exp(x),[0;1]);


/*********************************************************************************/
restart;
f=sin(x);
f;
rename(x,y);
f;

/*********************************************************************************/
restart;
a=1;
f=sin(x);
rename(x,a);
a;
f;

/*********************************************************************************/
restart;
verbosity=1!;
f=sin(x);
rename(y,z);

/*********************************************************************************/
restart;
rename(x,y);
isbound(x);
isbound(y);

/*********************************************************************************/
restart;
print(exp(x));
a = 3;
restart;
print(x);
a;

/*********************************************************************************/
restart;
print(exp(x));
for i from 1 to 10 do {
	print(i);
	if (i == 5) then restart;
};

/*********************************************************************************/
restart;
print(exp(x));
a = 3;
for i from 1 to 10 do {
	print(i);
	if (i == 5) then {
		restart;
		i = 7;
	};
};
print(x);
a;


/*********************************************************************************/
restart;
succ = proc(n) { var res; res := n + 1; return res; };
succ(5);
succ;

/*********************************************************************************/
restart;
hey = proc(s) { print("Hello",s); };
hey("world");
hey;

/*********************************************************************************/
restart;
revert([| |]);

/*********************************************************************************/
restart;
revert([|2,3,5,2,1,4|]);
/*********************************************************************************/
restart;
display=binary!;
round(Pi,20,RN);


/*********************************************************************************/
restart;
p=exp(1) + x*(exp(2) + x*exp(3));
display=binary!;
roundcoefficients(p,[|DD,D,D|]);
roundcoefficients(p,[|DD,D...|]);

/*********************************************************************************/
restart;
f=sin(exp(1)*x);
display=binary!;
f;
roundcoefficients(f,[|D...|]);

/*********************************************************************************/
restart;
p=exp(1) + x*(exp(2) + x*exp(3));
verbosity=1!;
display=binary!;
roundcoefficients(p,[|DD,D|]);


/*********************************************************************************/
restart;
printbinary(roundcorrectly([1.010001_2; 1.0101_2]));
printbinary(roundcorrectly([1.00001_2; 1.001_2]));

/*********************************************************************************/
restart;
roundcorrectly([-1; 1]);

/*********************************************************************************/
restart;
display=binary!;
round(Pi,20,RN);

/*********************************************************************************/
restart;
display=binary!;
a=2^(-1100);
round(a,53,RN);
double(a);

/*********************************************************************************/
restart;
display=binary!;
round(Pi,20,RU);


/*********************************************************************************/
restart;
display=binary!;
round(Pi,20,RZ);


/*********************************************************************************/
restart; 
searchgal(log(x),2,53,15,DD,1b-112);
searchgal(log(x),2,53,18,DD,1b-112);

/*********************************************************************************/
restart; 
f = exp(x);
s = searchgal(f,2,53,18,DD,1b-112);
if (s != [||]) then {
   v = s[0];
   print("The rounding error is 2^(",evaluate(log2(abs(DD(f)/f - 1)),v),")");
} else print("No value found");

/*********************************************************************************/
restart;
searchgal([|sin(x),cos(x)|],1,53,15,[|D,D|],[|1b-62,1b-60|]);

/*********************************************************************************/
restart;
print(simplifysafe((6 + 2) + (5 + exp(0)) * x));

/*********************************************************************************/
restart;
print(simplifysafe((log(x - x + 1) + asin(1))));

/*********************************************************************************/
restart;
print(simplifysafe((log(x - x + 1) + asin(1)) - (atan(1) * 2)));

/*********************************************************************************/
restart;
print(simplify(sin(pi * x)));
print(simplify(erf(exp(3) + x * log(4))));

/*********************************************************************************/
restart;
prec = 20!;
t = erf(0.5);
s = simplify(erf(0.5));
prec = 200!;
t;
s;

/*********************************************************************************/
restart;
sort([| |]);
sort([|2,3,5,2,1,4|]);
/*********************************************************************************/
restart;
p = taylor(exp(x),5,0);
s = subpoly(p,[|1,3,5|]);
print(p);
print(s);

/*********************************************************************************/
restart;
p = remez(atan(x),10,[-1,1]);
subpoly(p,[|1,3,5...|]);

/*********************************************************************************/
restart;
subpoly(exp(x),[|1,2,3|]);

/*********************************************************************************/
restart;
f=sin(x);
g=cos(x);
substitute(f,g);
f(g);

/*********************************************************************************/
restart;
a=1;
f=sin(x);
substitute(f,a);
/*********************************************************************************/
restart;
sup([1;3]);
sup(5);

/*********************************************************************************/
restart;
display=binary!;
I=[0; 0.111110000011111_2];
sup(I);
prec=12!;
sup(I);

/*********************************************************************************/
restart;
tail([|1,2,3|]);
tail([|1,2...|]);

/*********************************************************************************/
restart;
f=exp(x);
p=remez(f,3,[0;1]);
taylorrecursions=0;
evaluate(f-p, [0;1]);
taylorrecursions=1;
evaluate(f-p, [0;1]);
/*********************************************************************************/
restart;
print(taylor(exp(x),5,0));

/*********************************************************************************/
restart;
print(taylor(asin(x),7,0));

/*********************************************************************************/
restart;
print(taylor(erf(x),6,0));

/*********************************************************************************/
restart;
verbosity=1!;
p=remez(sin(x),10,[-1;1]);

/*********************************************************************************/
restart;
verbosity=1!;
a = 1+ 2^(-55)+2^(-115);
TD(a);
prec=110!;
TD(a);

/*********************************************************************************/
restart;
true && false;
2>1;

/*********************************************************************************/
restart;
exp(x); 
a = 3; 
{var a, b; a=5; b=3; {var a; var b; b = true; a = 1; a; b;}; a; b; }; 
a;

/*********************************************************************************/
restart;
verbosity=0!;
1.2+"toto";
verbosity=1!;
1.2+"toto";
verbosity=2!;
1.2+"toto";
/*********************************************************************************/
restart;
print(void);
void;

/*********************************************************************************/
restart;
hey = proc() { print("Hello world."); };
hey;
hey();
hey(void);
print(hey());

/*********************************************************************************/
restart; 
worstcase(exp(x),24,[1,2],24,1b-26);


/*********************************************************************************/
restart;
write(x + 2 + exp(sin(x))); 
write("Hello\n");
write("Hello","world\n");
write("Hello","you", 4 + 3, "other persons.\n");

/*********************************************************************************/
restart;
write("Hello","\n");
write([|"Hello"|],"\n");
s = "Hello";
write(s,[|s|],"\n");
t = "Hello\tyou";
write(t,[|t|],"\n");

/*********************************************************************************/
restart;
write(x + 2 + exp(sin(x))) > "foo.sol";
readfile("foo.sol");

/*********************************************************************************/
restart;
write(x + 2 + exp(sin(x))) >> "foo.sol";


/*********************************************************************************/
restart;
P = fpminimax(cos(x),6,[|DD, DD, D...|],[-1b-5;1b-5]);
printexpansion(P);

P = fpminimax(sin(x),6,[|32...|],[-1b-5;1b-5], fixed, absolute);
display = powers!;
P;

P = fpminimax(exp(x), [|3,4|], [|D,24|], [-1/256; 1/246], 1+x+x^2/2);
display = powers!;
P;

f = cos(exp(x));
pstar = remez(f, 5, [-1b-7;1b-7]);
listpoints = dirtyfindzeros(f-pstar, [-1b-7; 1b-7]);
P1 = fpminimax(f, 5, [|DD...|], listpoints, absolute, default, default, pstar);
P2 = fpminimax(f, 5, [|D...|], listpoints, absolute, default, default, pstar);
P3 = fpminimax(f, 5, [|D, D, D, 24...|], listpoints, absolute, default, default, pstar);
print("Error of pstar: ", dirtyinfnorm(f-pstar, [-1b-7; 1b-7]));
print("Error of P1:    ", dirtyinfnorm(f-P1, [-1b-7; 1b-7]));
print("Error of P2:    ", dirtyinfnorm(f-P2, [-1b-7; 1b-7]));
print("Error of P3:    ", dirtyinfnorm(f-P3, [-1b-7; 1b-7]));

/*********************************************************************************/
restart;
autosimplify=off!;
1+1;
1-+2;
-3--4;
5+-8;
3*6;
4*-5;
4/-3;
2-5^3;
2+-3/4;
4/-5-+6;
3*5/45;
3/4/6;
2*6+5*5;
5+3/6;
5-+5*+5;
24+2;
-4-9*4;
32/48*3;
5+-4*-4*64-34^2/-2*5-7+8*3*4--5;

3*sin(3)+5--cos(7);
-exp(24*sin(1)/2);

(2-5)3;
2^(-53);
2^((-5)4);
2^(-54);
(2+-3)/4;
2+(-3)/4;
2+-(3/4);
2+-(-3)/4;
2+(-3/4);
(4/-5)-+6;
4/(-5-+6);
4/-5-(+6);
(4/-5)-(+6);
3*(5/45);
(3*5)/45;
((3*5)/4)5;
3*5/(45);
3*(5/4)5;
(3/4)/6;
3/(4/6);
2*(6+5*5);
(2*6)+5*5;
2*(6+5)*5;
2*6+(5*5);
(2*(6+5))*5;
(2*6+5)*5;
((2*6)+5)*5;
(5+3)/6;
5+(3/6);
5-(+5*+5);
(5-+5)*+5;
5-+(5*+5);
(24)+2;
2^(4+2);
-(4-10)*4;
(-4)-10*4;
(-4-10)*4;
(-4)^(-10)*4;
-4^-(10*4);
-(4-10)*4;
-(4^-(10*4));
(-4)^(-10)*4;
-(4^-(10*4));
(32)/4^(8*3);
3^(2/48)*3;
(32/4)^(8*3);
3^(2/(48))*3;
3^(2/4^(8*3));
((32)/4)8*3;
3^(2/48)*3;
(32/(48))*3;
32/4^(8*3);
3^(2/48*3);
5+-4*-4*64-34^2/-2*5-7+8*3*4--5;
5+-4*(-4*6^(4-3)4)2/-2*5-7+8*3*4--5;
(5+-4)*-(4*6^(4-3)4^2/-2*5-7+8*3*4)--5;
5+-(4*(-4)*64-(34^2)/(-2*5-7)+8*3*4)--5;
(5+-(4*-4*(64-3^(42/-2*5)-7)+8*3))*4--5;
5+-(4*-4)*(64-34^2/-2*5-7+8)*3*4--5;
5+(-4*-4)*(64-(34)2/-2*5)-7+8*3*4--5;
(5+-4)*-(4*64-(34^2/-2*5-7)+8*3)*4--5;